// queryDSL version 정보
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
//    id 'org.springframework.boot' version '2.6.3'
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'     // queryDSL plugins 추가
    id 'java'
}

group = 'com.archive'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-devtools")

    /* thymeleaf 관련  */
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')

    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-web")

    /* spring security */
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    implementation("org.springframework.boot:spring-boot-starter-json")
    implementation group: 'org.msgpack', name: 'jackson-dataformat-msgpack', version: '0.8.18'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    /* swagger */
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    /* queryDSL */
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    /* DB 관련 */
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
//    implementation('com.h2database:h2')

    /* 이메일 전송 */
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    /* Chaos Monkey */
//    implementation 'de.codecentric:chaos-monkey-spring-boot:2.6.1'

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* ArchUnit */
//    testImplementation 'com.tngtech.archunit:archunit-junit5-engine:0.12.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

/* queryDSL 설정 추가 */
// queryDSL에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"

// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}

// queryDSL 컴파일 시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// queryDSL이 compileClassPath를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}